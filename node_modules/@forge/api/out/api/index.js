"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.wrapFetchApiMethods = void 0;
var polyfill_response_1 = require("./polyfill-response");
Object.defineProperty(exports, "transformResponse", { enumerable: true, get: function () { return polyfill_response_1.transformResponse; } });
const wrapRequestGraph = (requestGraphApi) => (query, variables) => requestGraphApi('/graphql', {
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify(Object.assign({ query }, (variables ? { variables } : {})))
});
exports.wrapFetchApiMethods = (api, wrapFetch) => {
    return {
        fetch: wrapFetch(api.fetch),
        requestJira: wrapFetch(api.requestJira),
        requestConfluence: wrapFetch(api.requestConfluence),
        asUser: () => ({
            requestJira: wrapFetch(api.asUser().requestJira),
            requestConfluence: wrapFetch(api.asUser().requestConfluence),
            requestGraph: wrapRequestGraph(wrapFetch(api.asUser().requestGraph))
        }),
        asApp: () => ({
            requestJira: wrapFetch(api.asApp().requestJira),
            requestConfluence: wrapFetch(api.asApp().requestConfluence),
            requestGraph: wrapRequestGraph(wrapFetch(api.asApp().requestGraph))
        })
    };
};
