"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.propertiesApi = void 0;
const index_1 = require("../index");
const jira_issue_1 = require("./jira-issue");
const jira_project_1 = require("./jira-project");
const confluence_page_1 = require("./confluence-page");
const confluence_space_1 = require("./confluence-space");
const sanitizedKey = (input) => {
    const regex = /^[A-Za-z0-9_\-]+$/;
    if (!regex.test(input)) {
        throw new Error('Invalid context/property key');
    }
    return input;
};
const getPropertiesInstance = (adapter) => {
    const storage = {
        get: (key) => adapter.get(sanitizedKey(key)),
        set: (key, value) => adapter.set(sanitizedKey(key), value),
        delete: (key) => adapter.delete(sanitizedKey(key))
    };
    return storage;
};
exports.propertiesApi = {
    onJiraIssue: (issueKey) => getPropertiesInstance(new jira_issue_1.JiraIssueStorage(sanitizedKey(issueKey), index_1.asApp().requestJira)),
    onJiraProject: (projectKey) => getPropertiesInstance(new jira_project_1.JiraProjectStorage(sanitizedKey(projectKey), index_1.asApp().requestJira)),
    onConfluencePage: (pageId) => getPropertiesInstance(new confluence_page_1.ConfluencePageStorage(sanitizedKey(pageId), index_1.asApp().requestConfluence)),
    onConfluenceSpace: (spaceId) => getPropertiesInstance(new confluence_space_1.ConfluenceSpaceStorage(sanitizedKey(spaceId), index_1.asApp().requestConfluence))
};
